/*******************************************************************************
 * Size: 28 px
 * Bpp: 1
 * Opts: --bpp 1 --size 28 --no-compress --font Montserrat-SemiBold.ttf --symbols abcdefghijklmnopqrstuvwxyz --format lvgl -o montserrat_bold_28.c
 ******************************************************************************/

#ifndef MONTSERRAT_BOLD_28
#define MONTSERRAT_BOLD_28 1
#endif

#if MONTSERRAT_BOLD_28

/*-----------------
 *    BITMAPS
 *----------------*/

/*Store the image of the glyphs*/
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap_28[] = {
    /* U+0061 "a" */
    0x1f, 0xc1, 0xff, 0xc7, 0xff, 0x8c, 0x1f, 0x0,
    0x3c, 0x0, 0xf1, 0xff, 0xdf, 0xff, 0xff, 0xff,
    0xc0, 0xff, 0x3, 0xfe, 0x1f, 0xff, 0xfd, 0xff,
    0xf1, 0xf3, 0xc0,

    /* U+0062 "b" */
    0xf0, 0x0, 0xf0, 0x0, 0xf0, 0x0, 0xf0, 0x0,
    0xf0, 0x0, 0xf0, 0x0, 0xf3, 0xe0, 0xff, 0xf8,
    0xff, 0xfc, 0xfc, 0x3e, 0xf8, 0x1e, 0xf0, 0xf,
    0xf0, 0xf, 0xf0, 0xf, 0xf0, 0xf, 0xf0, 0xf,
    0xf8, 0x1e, 0xfc, 0x3e, 0xff, 0xfc, 0xff, 0xf8,
    0xf3, 0xe0,

    /* U+0063 "c" */
    0x7, 0xe0, 0x3f, 0xf0, 0xff, 0xf3, 0xe0, 0xf7,
    0x80, 0x9e, 0x0, 0x3c, 0x0, 0x78, 0x0, 0xf0,
    0x1, 0xe0, 0x1, 0xe0, 0x23, 0xe0, 0xf3, 0xff,
    0xc3, 0xff, 0x1, 0xf8, 0x0,

    /* U+0064 "d" */
    0x0, 0xf, 0x0, 0xf, 0x0, 0xf, 0x0, 0xf,
    0x0, 0xf, 0x0, 0xf, 0x7, 0xcf, 0x1f, 0xff,
    0x3f, 0xff, 0x7c, 0x3f, 0xf8, 0x1f, 0xf0, 0xf,
    0xf0, 0xf, 0xf0, 0xf, 0xf0, 0xf, 0xf0, 0xf,
    0x78, 0x1f, 0x7c, 0x3f, 0x3f, 0xff, 0x1f, 0xff,
    0x7, 0xcf,

    /* U+0065 "e" */
    0x7, 0xc0, 0x3f, 0xe0, 0xff, 0xe3, 0xe1, 0xe7,
    0x81, 0xde, 0x1, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xe0, 0x1, 0xe0, 0x3, 0xe0, 0xc3, 0xff,
    0xc3, 0xff, 0x1, 0xf8, 0x0,

    /* U+0066 "f" */
    0x3, 0xe1, 0xfc, 0x3f, 0x8f, 0x91, 0xe0, 0x3c,
    0x3f, 0xff, 0xff, 0xff, 0xe3, 0xc0, 0x78, 0xf,
    0x1, 0xe0, 0x3c, 0x7, 0x80, 0xf0, 0x1e, 0x3,
    0xc0, 0x78, 0xf, 0x1, 0xe0,

    /* U+0067 "g" */
    0xf, 0xcf, 0x1f, 0xff, 0x3f, 0xff, 0x7c, 0x3f,
    0xf8, 0x1f, 0xf0, 0xf, 0xf0, 0xf, 0xf0, 0xf,
    0xf0, 0xf, 0xf8, 0x1f, 0x7c, 0x3f, 0x3f, 0xff,
    0x1f, 0xff, 0xf, 0xcf, 0x0, 0xf, 0x0, 0x1f,
    0x38, 0x3e, 0x7f, 0xfe, 0x3f, 0xf8, 0xf, 0xf0,

    /* U+0068 "h" */
    0xf0, 0x1, 0xe0, 0x3, 0xc0, 0x7, 0x80, 0xf,
    0x0, 0x1e, 0x7e, 0x3f, 0xfe, 0x7f, 0xfe, 0xfc,
    0x3f, 0xf0, 0x7f, 0xc0, 0x7f, 0x80, 0xff, 0x1,
    0xfe, 0x3, 0xfc, 0x7, 0xf8, 0xf, 0xf0, 0x1f,
    0xe0, 0x3f, 0xc0, 0x7f, 0x80, 0xf0,

    /* U+0069 "i" */
    0x6f, 0xf6, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf0,

    /* U+006A "j" */
    0x3, 0x3, 0xc1, 0xe0, 0x60, 0x0, 0x0, 0x0,
    0xf, 0x7, 0x83, 0xc1, 0xe0, 0xf0, 0x78, 0x3c,
    0x1e, 0xf, 0x7, 0x83, 0xc1, 0xe0, 0xf0, 0x78,
    0x3c, 0x1e, 0x9f, 0x7f, 0x3f, 0x9f, 0x0,

    /* U+006B "k" */
    0xf0, 0x0, 0xf0, 0x0, 0xf0, 0x0, 0xf0, 0x0,
    0xf0, 0x0, 0xf0, 0x1e, 0xf0, 0x3c, 0xf0, 0xf8,
    0xf1, 0xf0, 0xf3, 0xe0, 0xf7, 0xc0, 0xff, 0x80,
    0xff, 0xc0, 0xff, 0xe0, 0xfd, 0xf0, 0xf8, 0xf8,
    0xf0, 0x78, 0xf0, 0x3c, 0xf0, 0x1e, 0xf0, 0x1f,

    /* U+006C "l" */
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff,

    /* U+006D "m" */
    0xf3, 0xe1, 0xf8, 0xff, 0xf3, 0xfc, 0xff, 0xff,
    0xfe, 0xfc, 0x7f, 0x1f, 0xf8, 0x3e, 0xf, 0xf0,
    0x3c, 0xf, 0xf0, 0x3c, 0xf, 0xf0, 0x3c, 0xf,
    0xf0, 0x3c, 0xf, 0xf0, 0x3c, 0xf, 0xf0, 0x3c,
    0xf, 0xf0, 0x3c, 0xf, 0xf0, 0x3c, 0xf, 0xf0,
    0x3c, 0xf, 0xf0, 0x3c, 0xf,

    /* U+006E "n" */
    0xf3, 0xf1, 0xff, 0xf3, 0xff, 0xf7, 0xe1, 0xff,
    0x83, 0xfe, 0x3, 0xfc, 0x7, 0xf8, 0xf, 0xf0,
    0x1f, 0xe0, 0x3f, 0xc0, 0x7f, 0x80, 0xff, 0x1,
    0xfe, 0x3, 0xfc, 0x7, 0x80,

    /* U+006F "o" */
    0x7, 0xe0, 0x1f, 0xf8, 0x3f, 0xfc, 0x7c, 0x3e,
    0x78, 0x1e, 0xf0, 0xf, 0xf0, 0xf, 0xf0, 0xf,
    0xf0, 0xf, 0xf0, 0xf, 0x78, 0x1e, 0x7c, 0x3e,
    0x3f, 0xfc, 0x1f, 0xf8, 0x7, 0xe0,

    /* U+0070 "p" */
    0xf3, 0xe0, 0xff, 0xf8, 0xff, 0xfc, 0xfc, 0x3e,
    0xf8, 0x1e, 0xf0, 0xf, 0xf0, 0xf, 0xf0, 0xf,
    0xf0, 0xf, 0xf0, 0xf, 0xf8, 0x1e, 0xfc, 0x3e,
    0xff, 0xfc, 0xff, 0xf8, 0xf3, 0xf0, 0xf0, 0x0,
    0xf0, 0x0, 0xf0, 0x0, 0xf0, 0x0, 0xf0, 0x0,

    /* U+0071 "q" */
    0x7, 0xcf, 0x1f, 0xff, 0x3f, 0xff, 0x7c, 0x3f,
    0xf8, 0x1f, 0xf0, 0xf, 0xf0, 0xf, 0xf0, 0xf,
    0xf0, 0xf, 0xf0, 0xf, 0x78, 0x1f, 0x7c, 0x3f,
    0x3f, 0xff, 0x1f, 0xff, 0x7, 0xcf, 0x0, 0xf,
    0x0, 0xf, 0x0, 0xf, 0x0, 0xf, 0x0, 0xf,

    /* U+0072 "r" */
    0xf3, 0xff, 0xff, 0xff, 0x8f, 0x87, 0x83, 0xc1,
    0xe0, 0xf0, 0x78, 0x3c, 0x1e, 0xf, 0x7, 0x83,
    0xc0,

    /* U+0073 "s" */
    0x1f, 0xc3, 0xff, 0x9f, 0xfd, 0xf0, 0x4f, 0x0,
    0x78, 0x3, 0xfc, 0xf, 0xfc, 0xf, 0xf0, 0x7,
    0xc0, 0x1e, 0xc1, 0xff, 0xff, 0x7f, 0xf8, 0xff,
    0x0,

    /* U+0074 "t" */
    0x1e, 0x1, 0xe0, 0x1e, 0x1, 0xe0, 0xff, 0xef,
    0xfe, 0xff, 0xe1, 0xe0, 0x1e, 0x1, 0xe0, 0x1e,
    0x1, 0xe0, 0x1e, 0x1, 0xe0, 0x1e, 0x1, 0xf2,
    0x1f, 0xe0, 0xfe, 0x3, 0xe0,

    /* U+0075 "u" */
    0xf0, 0x1f, 0xe0, 0x3f, 0xc0, 0x7f, 0x80, 0xff,
    0x1, 0xfe, 0x3, 0xfc, 0x7, 0xf8, 0xf, 0xf0,
    0x1f, 0xe0, 0x3f, 0xc0, 0xfb, 0xc3, 0xf7, 0xff,
    0xe7, 0xff, 0xc3, 0xe7, 0x80,

    /* U+0076 "v" */
    0xf0, 0x7, 0xf0, 0xf, 0x78, 0xe, 0x78, 0x1e,
    0x38, 0x1c, 0x3c, 0x1c, 0x1c, 0x3c, 0x1e, 0x38,
    0x1e, 0x78, 0xe, 0x70, 0xf, 0xf0, 0x7, 0xe0,
    0x7, 0xe0, 0x3, 0xe0, 0x3, 0xc0,

    /* U+0077 "w" */
    0xf0, 0x1e, 0x3, 0x9c, 0x7, 0x80, 0xe7, 0x1,
    0xe0, 0x39, 0xe0, 0xfc, 0x1c, 0x38, 0x3f, 0x7,
    0xe, 0x1f, 0xc3, 0xc3, 0xc7, 0x38, 0xe0, 0x71,
    0xce, 0x38, 0x1c, 0xe3, 0x9e, 0x3, 0xb8, 0x77,
    0x0, 0xee, 0x1d, 0xc0, 0x3f, 0x7, 0xe0, 0x7,
    0xc0, 0xf8, 0x1, 0xf0, 0x3e, 0x0, 0x78, 0x7,
    0x0,

    /* U+0078 "x" */
    0x78, 0xe, 0x3c, 0x1e, 0x1c, 0x3c, 0x1e, 0x78,
    0xf, 0x70, 0x7, 0xf0, 0x3, 0xe0, 0x3, 0xc0,
    0x7, 0xe0, 0x7, 0xf0, 0xf, 0x78, 0x1e, 0x78,
    0x3c, 0x3c, 0x38, 0x1e, 0x78, 0xf,

    /* U+0079 "y" */
    0xf0, 0x7, 0x70, 0xf, 0x78, 0xe, 0x78, 0x1e,
    0x38, 0x1c, 0x3c, 0x3c, 0x1c, 0x38, 0x1e, 0x38,
    0xe, 0x78, 0xf, 0x70, 0x7, 0xf0, 0x7, 0xe0,
    0x7, 0xe0, 0x3, 0xc0, 0x3, 0xc0, 0x3, 0x80,
    0x47, 0x80, 0xff, 0x0, 0xff, 0x0, 0x7c, 0x0,

    /* U+007A "z" */
    0xff, 0xff, 0xff, 0xff, 0xfe, 0x1, 0xe0, 0x1e,
    0x1, 0xe0, 0x1e, 0x1, 0xf0, 0xf, 0x0, 0xf0,
    0xf, 0x0, 0xf0, 0xf, 0xff, 0xff, 0xff, 0xff,
    0xe0
};


/*---------------------
 *  GLYPH DESCRIPTION
 *--------------------*/

static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc_28[] = {
    {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
    {.bitmap_index = 0, .adv_w = 272, .box_w = 14, .box_h = 15, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 27, .adv_w = 307, .box_w = 16, .box_h = 21, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 69, .adv_w = 260, .box_w = 15, .box_h = 15, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 98, .adv_w = 308, .box_w = 16, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 140, .adv_w = 279, .box_w = 15, .box_h = 15, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 169, .adv_w = 165, .box_w = 11, .box_h = 21, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 198, .adv_w = 311, .box_w = 16, .box_h = 20, .ofs_x = 1, .ofs_y = -5},
    {.bitmap_index = 238, .adv_w = 307, .box_w = 15, .box_h = 20, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 276, .adv_w = 129, .box_w = 4, .box_h = 21, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 287, .adv_w = 132, .box_w = 9, .box_h = 27, .ofs_x = -3, .ofs_y = -5},
    {.bitmap_index = 318, .adv_w = 284, .box_w = 16, .box_h = 20, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 358, .adv_w = 129, .box_w = 4, .box_h = 20, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 368, .adv_w = 472, .box_w = 24, .box_h = 15, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 413, .adv_w = 307, .box_w = 15, .box_h = 15, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 442, .adv_w = 289, .box_w = 16, .box_h = 15, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 472, .adv_w = 307, .box_w = 16, .box_h = 20, .ofs_x = 2, .ofs_y = -5},
    {.bitmap_index = 512, .adv_w = 307, .box_w = 16, .box_h = 20, .ofs_x = 1, .ofs_y = -5},
    {.bitmap_index = 552, .adv_w = 188, .box_w = 9, .box_h = 15, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 569, .adv_w = 231, .box_w = 13, .box_h = 15, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 594, .adv_w = 190, .box_w = 12, .box_h = 19, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 623, .adv_w = 305, .box_w = 15, .box_h = 15, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 652, .adv_w = 259, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 682, .adv_w = 412, .box_w = 26, .box_h = 15, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 731, .adv_w = 257, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 761, .adv_w = 259, .box_w = 16, .box_h = 20, .ofs_x = 0, .ofs_y = -5},
    {.bitmap_index = 801, .adv_w = 238, .box_w = 13, .box_h = 15, .ofs_x = 1, .ofs_y = 0}
};

/*---------------------
 *  CHARACTER MAPPING
 *--------------------*/



/*Collect the unicode lists and glyph_id offsets*/
static const lv_font_fmt_txt_cmap_t cmaps_28[] =
{
    {
        .range_start = 97, .range_length = 26, .glyph_id_start = 1,
        .unicode_list = NULL, .glyph_id_ofs_list = NULL, .list_length = 0, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY
    }
};



/*--------------------
 *  ALL CUSTOM DATA
 *--------------------*/

#if LVGL_VERSION_MAJOR == 8
/*Store all the custom data of the font*/
static  lv_font_fmt_txt_glyph_cache_t cache_28;
#endif

#if LVGL_VERSION_MAJOR >= 8
static const lv_font_fmt_txt_dsc_t font_dsc_28 = {
#else
static lv_font_fmt_txt_dsc_t font_dsc = {
#endif
    .glyph_bitmap = glyph_bitmap_28,
    .glyph_dsc = glyph_dsc_28,
    .cmaps = cmaps_28,
    .kern_dsc = NULL,
    .kern_scale = 0,
    .cmap_num = 1,
    .bpp = 1,
    .kern_classes = 0,
    .bitmap_format = 0,
#if LVGL_VERSION_MAJOR == 8
    .cache = &cache_28
#endif
};



/*-----------------
 *  PUBLIC FONT
 *----------------*/

/*Initialize a public general font descriptor*/
#if LVGL_VERSION_MAJOR >= 8
const lv_font_t montserrat_bold_28 = {
#else
lv_font_t montserrat_bold_28 = {
#endif
    .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/
    .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/
    .line_height = 27,          /*The maximum line height required by the font*/
    .base_line = 5,             /*Baseline measured from the bottom of the line*/
#if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)
    .subpx = LV_FONT_SUBPX_NONE,
#endif
#if LV_VERSION_CHECK(7, 4, 0) || LVGL_VERSION_MAJOR >= 8
    .underline_position = -3,
    .underline_thickness = 1,
#endif
    .dsc = &font_dsc_28,          /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
#if LV_VERSION_CHECK(8, 2, 0) || LVGL_VERSION_MAJOR >= 9
    .fallback = NULL,
#endif
    .user_data = NULL,
};



#endif /*#if MONTSERRAT_BOLD_28*/

